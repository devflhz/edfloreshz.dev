[{"content":"I\u0026rsquo;m Eduardo Flores, a very enthusiastic software engineer passionate about programming, keyboards and computers, some of my main interests are:\n Linux 🐧 Rust 🦀 GTK and Qt 🚀 PC Building 🖥️  Projects 👨🏻‍💻  ✔️ Do is a rewrite of GNOME To Do using gtk-rs and Relm4, the goal is to improve on the existing set of features provided by To Do to provide the ultimate to-do experience. 🌎 DevLand is a community for developers passionate about software, technology and innovation. 🇯🇵 Sensei is a simple command line tool to open documentation for any crate in crates.io. 🔥 Devmode is a project management utility for developers. 🏫 Academic is an administration system designed for schools.  Donate 💝 I’m trying make ✨ my dream ✨ come true and work full time on open source to create tools, content and applications that benefit the community at large, my contributions mostly involve:\n 🎥 Video tutorials and live streams for GTK / Relm4 development with Rust. ✍🏼 Writing articles to help people approach software development more easily. 🌎 Community organizing for developers in Mexico and the world.  Please consider donating to support me, it would mean a lot to me if you could help me reach my goal, everything helps, even just a few words of encouragement 👍🏼\nContact 📧 You can reach me on GitHub, Twitter and Telegram.\n","permalink":"https://edfloreshz.dev/about/","summary":"About me page","title":"About me"},{"content":"USAGE: dm [SUBCOMMAND] FLAGS: -h, --help Prints help information -V, --version Prints version information SUBCOMMANDS: clone Clones a utils repository in a specific folder structure. config Sets options for configuration. fork Clone repo and set upstream to your fork help Prints this message or the help of the given subcommand(s) open Opens a project on your selected text editor. Installation Cargo cargo install devmode Arch Linux paru -S devmode-git Configuration The config or cf command will help you configure dm to your liking.\nText Editor You can set your favorite text editor running:\n dm config -e --editor Git Host You can set your Git host running:\n dm config -h --host Git User You can set your Git user running:\n dm config -o --owner Configure everything You can configure everything running:\n dm config -a --all Show config You can show your current config running:\n dm config -s --show Current settings: Host: GitHub Owner: edfloreshz Editor: Visual Studio Code Clone a repo Dev(mode) facilitates repository storage and organization in your filesystem.\nHow it works When you clone a repository it will be stored to your filesystem using a specific folder structure.\nYou can also use  dm cl\n$HOME └── Developer └── host └── owner └── repo This makes it easier for you to find repositories and allows dm to open them by just specifying the name of the project.\nUsage USAGE: dm clone \u0026lt;args\u0026gt;... FLAGS: -h, --help Prints help information -V, --version Prints version information ARGS: \u0026lt;args\u0026gt;... Provide either a Git \u0026lt;url\u0026gt; or a Git \u0026lt;host\u0026gt; \u0026lt;owner\u0026gt; \u0026lt;repo\u0026gt;. Clone by URL  dm clone https://github.com/edfloreshz/devmode Clone without URL  dm clone \u0026lt;host\u0026gt; \u0026lt;owner\u0026gt; \u0026lt;repository\u0026gt; Clone with config.toml Running  dm config asks you to specify your Git host and user, now just type one of your repos.\n dm clone \u0026lt;repo\u0026gt; You can also clone multiple of your own repositories while using this option.\n dm clone \u0026lt;repo1\u0026gt; \u0026lt;repo2\u0026gt; Just clone You can clone without specifying the arguments.\n dm clone You will be presented with the following setup:\nᐅ dm clone ? Choose your Git host: › ❯ GitHub GitLab ? Git username: › user ? Git repo name: › repo Cloning edfloreshz/blog from GitHub... Clone and set upstream (fork) Clone a repo and set upstream, ideal for forks, when you clone a repository it will be stored to your filesystem using a specific folder structure. Similar to how  dm cl works.\nUsage  dm fork --upstream \u0026lt;upstream\u0026gt; [args]... FLAGS: -h, --help Prints help information -V, --version Prints version information OPTIONS: -u, --upstream \u0026lt;upstream\u0026gt; Set the upstream to your fork \u0026lt;url\u0026gt; ARGS: \u0026lt;args\u0026gt;... Provide either a Git \u0026lt;url\u0026gt; or a Git \u0026lt;host\u0026gt; \u0026lt;owner\u0026gt; \u0026lt;repo\u0026gt;. Clone with url Use the --upstream or -u to set the upstream repository, then specify the repository that you wish to modify.\n dm fork --upstream https://github.com/user/repo https://github.com/your-user/your-repo-fork Clone with upstream URL and remaining parameters.  dm fk github \u0026lt;provider\u0026gt; \u0026lt;user\u0026gt; \u0026lt;forked-repo\u0026gt; -u \u0026lt;url\u0026gt; Just clone with the upstream URL This will launch a clone setup and guide you throught the cloning process.\n dm fork -u https://github.com/user/repo ? Choose your Git host: › ❯ GitHub GitLab ? Git username: › your-user ? Git repo name: › your-repo-fork Cloning your-user/your-repo-fork from GitHub... Setting https://github.com/user/repo how upstream Open a project Opens a project with your selected text editor.\nYou can also use  dm o\nUSAGE: dm open \u0026lt;project\u0026gt; FLAGS: -h, --help Prints help information -V, --version Prints version information ARGS: \u0026lt;project\u0026gt; Provide a project name. You can open a project with the following command:\n dm open \u0026lt;project\u0026gt; If two or more projects with the same name are found, you will have to choose which one to open.\nProposals If you have a proposal for a new feature, open a new issue.\n","permalink":"https://edfloreshz.dev/projects/devmode/","summary":"Dev(mode) is a project management utility for developers.","title":"Dev(mode)"},{"content":"Installation Cargo cargo install sensei Arch Linux paru -S sensei Usage sns \u0026lt;crate\u0026gt; [OPTIONS] [FLAGS] Options -v, --version \u0026lt;version\u0026gt; Opens documentation for a specific version. -q, --query \u0026lt;query\u0026gt; Specifies query to search documentation. Flags -h, --help Prints help information -l, --local Tries to open local documentation. -m, --manifest Looks up the version in Cargo.toml Examples Opening documentation for a crate. sns rand Opening local documentation for a crate. sns rand -l sns rand --local Specifying a version. sns rand -v 0.7.2 sns rand --version 0.7.2 Getting version from Cargo.toml sns rand --manifest sns rand -m Sending a query. sns rand -q Rng sns rand --query Rng ","permalink":"https://edfloreshz.dev/projects/sensei/","summary":"Sensei is a simple command line tool to open documentation for any crate.","title":"Sensei"}]